{"version":3,"sources":["components/Form.tsx","components/List.tsx","App.tsx","index.tsx","components/Form.module.scss","components/List.module.scss","App.module.scss"],"names":["Form","name","setName","handleSubmit","setCategory","editing","onSubmit","className","styles","form","action","value","onChange","e","target","input","type","placeholder","title","button","style","color","select","List","filteredList","deleteItem","editItem","finishItem","map","item","buttons","onClick","id","aria-label","editButton","doneButton","deleteButton","App","useState","list","setList","setEditing","editID","setEditID","category","setFilteredList","useEffect","filter","isFinished","filterCategory","app","event","preventDefault","newListItem","Date","getTime","alert","length","editingItem","find","console","log","clearButton","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.85c7798c.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './Form.module.scss';\r\n\r\ninterface IForm {\r\n  name: string;\r\n  setName: (value: string) => void;\r\n  handleSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\r\n  setCategory: (value: string) => void;\r\n  editing: boolean;\r\n}\r\n\r\nconst Form = ({ name, setName, handleSubmit, setCategory, editing }: IForm) => {\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className={styles.form}\r\n      action=\"\"\r\n    >\r\n      <input\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        className={styles.input}\r\n        type=\"text\"\r\n        placeholder=\"e.g. Reading a book\"\r\n      />\r\n      <button title=\"Add item\" className={styles.button} type=\"submit\">\r\n        {editing ? (\r\n          <i style={{ color: '#00e74d' }} className=\"fas fa-check-square\"></i>\r\n        ) : (\r\n          <i style={{ color: '#51A9EE' }} className=\"fas fa-plus-square\"></i>\r\n        )}\r\n      </button>\r\n      <select\r\n        onChange={(e) => setCategory(e.target.value)}\r\n        className={styles.select}\r\n        name=\"todos\"\r\n      >\r\n        <option value=\"all\">All</option>\r\n        <option value=\"completed\">Completed</option>\r\n        <option value=\"uncompleted\">Uncompleted</option>\r\n      </select>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport styles from './List.module.scss';\r\n\r\ninterface IListState {\r\n  filteredList: {\r\n    name: string;\r\n    id: number;\r\n    isFinished: boolean;\r\n  }[];\r\n  deleteItem: (id:number) => void;\r\n  editItem: (id:number) => void;\r\n  finishItem: (id:number) => void;\r\n  \r\n}\r\n\r\nconst List = ({ filteredList, deleteItem, editItem, finishItem }: IListState) => {\r\n  return (\r\n    <section className=\"container\">\r\n      <ul>\r\n        {filteredList.map((item) => {\r\n          return (\r\n            <li key={item.id}>\r\n              {item.name}\r\n              <div className={styles.buttons}>\r\n                <button\r\n                  title=\"Edit task\"\r\n                  onClick={() => editItem(item.id)}\r\n                  aria-label=\"Edit\"\r\n                  className={styles.editButton}\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"far fa-edit\"></i>\r\n                </button>\r\n                <button\r\n                  title=\"Task finished\"\r\n                  onClick={() => finishItem(item.id)}\r\n                  aria-label=\"Done\"\r\n                  className={styles.doneButton}\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"fas fa-check\"></i>\r\n                </button>\r\n                <button\r\n                  title=\"Delete task\"\r\n                  onClick={() => deleteItem(item.id)}\r\n                  aria-label=\"Delete\"\r\n                  className={styles.deleteButton}\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"far fa-trash-alt\"></i>\r\n                </button>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState, useEffect } from 'react';\nimport styles from './App.module.scss';\nimport Form from './components/Form';\nimport List from './components/List';\n\ninterface IListState {\n  task: {\n    name: string;\n    id: number;\n    isFinished: boolean;\n  }[];\n}\n\nfunction App() {\n  const [name, setName] = useState<string>('');\n  const [list, setList] = useState<IListState['task']>([]);\n  const [editing, setEditing] = useState<boolean>(false);\n  const [editID, setEditID] = useState<number>(0);\n  const [category, setCategory] = useState<string>('all');\n  const [filteredList, setFilteredList] = useState<IListState['task']>([]);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\n    event.preventDefault();\n\n    if (name && !editing) {\n      const newListItem = {\n        name: name,\n        id: new Date().getTime(),\n        isFinished: false,\n      };\n      setList([...list, newListItem]);\n      setName('');\n    } else if (!name) {\n      alert('Please enter value!');\n    } else if (name && editing) {\n      setList(\n        list.map((item) => {\n          if (item.id === editID) {\n            return { ...item, name: name };\n          }\n          return item;\n        }),\n      );\n      setEditing(false);\n      setEditID(0);\n    }\n  };\n\n  const deleteItem = (id: number): void => {\n    setList(list.filter((item) => item.id !== id));\n    setEditing(false);\n    setEditID(0);\n  };\n\n  const editItem = (id: number): void => {\n    const editingItem = list.find((item) => item.id === id);\n    if (typeof editingItem === 'object' && typeof editingItem.name === 'string') {\n      setName(editingItem.name);\n      setEditing(true);\n      setEditID(id);\n    }\n  };\n\n  const finishItem = (id: number) => {\n    setList(\n      list.map((item) => {\n        if (item.id === id) {\n          return { ...item, isFinished: true };\n        }\n        console.log(list)\n        return item;\n      })\n    );\n  };\n\n  const clearList = () => {\n    setList([]);\n    setEditing(false);\n    setEditID(0);\n  };\n\n  const filterCategory = () => {\n    switch (category) {\n      case 'uncompleted':\n        setFilteredList(list.filter((item) => item.isFinished === false));\n        break;\n      case 'completed':\n        setFilteredList(list.filter((item) => item.isFinished === true));\n        break;\n      default:\n        setFilteredList(list);\n        break;\n    }\n  };\n\n  useEffect(() => {\n    filterCategory();\n  }, [category, list]);\n\n  return (\n    <section className={styles.app}>\n      <h1>Todo List</h1>\n      <Form\n        name={name}\n        setName={setName}\n        handleSubmit={handleSubmit}\n        setCategory={setCategory}\n        editing={editing}\n      />\n\n      {list.length ? (\n        <>\n          <List\n            filteredList={filteredList}\n            deleteItem={deleteItem}\n            editItem={editItem}\n            finishItem={finishItem}\n          />\n          <button\n            className={styles.clearButton}\n            type=\"submit\"\n            onClick={clearList}\n          >\n            Clear list\n          </button>\n        </>\n      ) : (\n        <h4>The list is empty, please add new item</h4>\n      )}\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__fhpa2\",\"input\":\"Form_input__3Oz4U\",\"button\":\"Form_button__p4huz\",\"select\":\"Form_select__24dFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"List_container__2iyqY\",\"buttons\":\"List_buttons__2h4y4\",\"editButton\":\"List_editButton__1W122\",\"deleteButton\":\"List_deleteButton___PyVE\",\"doneButton\":\"List_doneButton__3OJ6R\",\"finished\":\"List_finished__27F-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__yPu8h\",\"clearButton\":\"App_clearButton__2Htsu\",\"finished\":\"App_finished__2gHKw\"};"],"sourceRoot":""}